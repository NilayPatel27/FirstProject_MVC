@model Actor

@{
    ViewData["Title"] = "Update a new actor";
}

<div class="row text">
    <div class="col-md-8 offset-2">
        <p>
        <h1>Update a New Actor</h1>
        </p>
        <div class="row">
            <div class="col-md-8 offset-2">
                <form>

                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Age" class="control-label"></label>
                        <input asp-for="Age" class="form-control" />
                        <span asp-validation-for="Age" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="DOB" class="control-label"></label>
                        <input asp-for="DOB" class="form-control" />
                        <span asp-validation-for="DOB" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="City" class="control-label"></label>
                        <input asp-for="City" class="form-control" />
                        <span asp-validation-for="City" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Gender" class="control-label"></label>
                        @Html.CheckBoxFor(m => m.Gender,new { id="Gender"})
                        <span asp-validation-for="Gender" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Hobbie" class="control-label"></label>
                        <input asp-for="Hobbie" class="form-control" id="Hobbie" readonly />
                        <span asp-validation-for="Hobbie" class="text-danger"></span>
                    </div>

                    @* @foreach (var item in Model.Hobbie.Split(','))
                        {
                        <h1>@item</h1>

                        <input type="checkbox" name="@item" value="@item" checked/>
                        } *@
                    @foreach (var item in "Action,Adventure,Comedy,Drama,Horror,Sci-Fi,Thriller".Split(','))
                    {
                        @if ((Model.Hobbie).Contains(@item))
                        {
                            <div>
                            <input type="checkbox" name="@item" value="@item" checked onclick="hobbies(value);"/>
                            <text>@item</text>
                            </div>
                        }
                        else
                        {
                            <div>
                            <input type="checkbox" name="@item" value="@item" onclick="hobbies(value);" />
                            <text>@item</text>
                            </div>
                        }
                    }
                    <div class="form-group">
                        <input type="submit" value="Update" class="btn btn-outline-success float-right" id="btnSubmit" />
                        <a class="btn btn-outline-secondary" asp-action="Index">Show All</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
var Hobbie = [];
    (() => {
        var d = document.getElementById("Hobbie").value;
        Hobbie = d.split(',');
        console.log(Hobbie,'Hobbie');
    })()

    function hobbies(Value) {
        if(Hobbie.includes(Value.trim())){
            console.log(Hobbie.length,'length')
            Hobbie.splice(Hobbie.indexOf(Value), 1);
        }
        else{
            console.log(Hobbie.length,'length')
            Hobbie.push(Value.trim());
        }
        let hobbies_string = Hobbie.join(",");
        console.log(Hobbie, hobbies_string,'array');
        document.getElementById("Hobbie").value = hobbies_string.toString();
    }
    $(document).ready(function() {  
        $(function() {  
            $('#btnSubmit').click(function(event) {  
                event.preventDefault();  
                var actorData = {  
                    Id : @Model.Id,
                    Name: $('#Name').val(),
                    Age: $('#Age').val(),
                    DOB: $('#DOB').val(),
                    City: $('#City').val(),
                    Gender: document.getElementById("Gender").checked,
                    Hobbie : $('#Hobbie').val()
                };  
                $.ajax({  
                    type: "POST",  
                    url: "/Actors/Edit",  
                    data: actorData,  
                    dataType: "html",  
                    contentType: 'application/x-www-form-urlencoded',  
                    success: function(data) {  
                        window.location.href = "/Actors/Index";
                        alert('Actor Updated Successfully'); 
                    },  
                    error: function(error) {  
                        alert("Error occured!!",error)  
                    }
                });  
            });  
        });  
    }); 
</script>
